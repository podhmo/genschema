{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "gqlgen-conf",
  "description": "Generated by `./bin/genschema --schema-title gqlgen-conf --indent    --query github.com/99designs/gqlgen/codegen/config.Config`",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "schema": {
      "$ref": "#/$defs/StringList"
    },
    "exec": {
      "$ref": "#/$defs/ExecConfig"
    },
    "model": {
      "$ref": "#/$defs/PackageConfig"
    },
    "federation": {
      "$ref": "#/$defs/PackageConfig"
    },
    "resolver": {
      "$ref": "#/$defs/ResolverConfig"
    },
    "autobind": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "models": {
      "$ref": "#/$defs/TypeMap"
    },
    "struct_tag": {
      "type": "string"
    },
    "directives": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/DirectiveConfig"
      }
    },
    "go_initialisms": {
      "$ref": "#/$defs/GoInitialismsConfig"
    },
    "omit_slice_element_pointers": {
      "type": "boolean"
    },
    "omit_getters": {
      "type": "boolean"
    },
    "omit_interface_checks": {
      "type": "boolean"
    },
    "omit_complexity": {
      "type": "boolean"
    },
    "omit_gqlgen_file_notice": {
      "type": "boolean"
    },
    "omit_gqlgen_version_in_file_notice": {
      "type": "boolean"
    },
    "struct_fields_always_pointers": {
      "type": "boolean"
    },
    "return_pointers_in_unmarshalinput": {
      "type": "boolean"
    },
    "resolvers_always_return_pointers": {
      "type": "boolean"
    },
    "nullable_input_omittable": {
      "type": "boolean"
    },
    "enable_model_json_omitempty_tag": {
      "type": "boolean",
      "items": {
        "type": "boolean"
      }
    },
    "skip_validation": {
      "type": "boolean"
    },
    "skip_mod_tidy": {
      "type": "boolean"
    },
    "federated": {
      "type": "boolean",
      "description": "Deprecated: use Federation instead. Will be removed next release"
    }
  },
  "required": [
    "exec",
    "autobind"
  ],
  "$defs": {
    "DirectiveConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "skip_runtime": {
          "type": "boolean"
        }
      },
      "required": [
        "skip_runtime"
      ]
    },
    "ExecConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "package": {
          "type": "string"
        },
        "layout": {
          "$ref": "#/$defs/ExecLayout"
        },
        "filename": {
          "type": "string"
        },
        "filename_template": {
          "type": "string"
        },
        "dir": {
          "type": "string"
        }
      },
      "required": [
        "dir"
      ]
    },
    "ExecLayout": {
      "type": "string"
    },
    "GoInitialismsConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "replace_defaults": {
          "type": "boolean"
        },
        "initialisms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "replace_defaults",
        "initialisms"
      ]
    },
    "ModelExtraField": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Type is the Go type of the field.\n\nIt supports the builtin basic types (like string or int64), named types\n(qualified by the full package path), pointers to those types (prefixed\nwith `*`), and slices of those types (prefixed with `[]`).\n\nFor example, the following are valid types:\n string\n *github.com/author/package.Type\n []string\n []*github.com/author/package.Type\n\nNote that the type will be referenced from the generated/graphql, which\nmeans the package it lives in must not reference the generated/graphql\npackage to avoid circular imports.\nrestrictions."
        },
        "overrideTags": {
          "type": "string",
          "description": "OverrideTags is an optional override of the Go field tag."
        },
        "description": {
          "type": "string",
          "description": "Description is an optional the Go field doc-comment."
        }
      },
      "required": [
        "type",
        "overrideTags",
        "description"
      ]
    },
    "PackageConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filename": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "model_template": {
          "type": "string"
        }
      }
    },
    "ResolverConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "filename": {
          "type": "string"
        },
        "filename_template": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "layout": {
          "$ref": "#/$defs/ResolverLayout"
        },
        "dir": {
          "type": "string"
        },
        "omit_template_comment": {
          "type": "boolean"
        },
        "resolver_template": {
          "type": "string"
        }
      },
      "required": [
        "dir"
      ]
    },
    "ResolverLayout": {
      "type": "string"
    },
    "StringList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "TypeMap": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/TypeMapEntry"
      }
    },
    "TypeMapEntry": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "model": {
          "$ref": "#/$defs/StringList"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/TypeMapField"
          }
        },
        "extraFields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ModelExtraField"
          },
          "description": "Key is the Go name of the field."
        }
      },
      "required": [
        "model"
      ]
    },
    "TypeMapField": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resolver": {
          "type": "boolean"
        },
        "fieldName": {
          "type": "string"
        }
      },
      "required": [
        "resolver",
        "fieldName"
      ]
    }
  }
}
